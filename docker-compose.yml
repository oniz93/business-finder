version: '3.8'

services:
  postgres:
    image: postgres:17.6-alpine
    container_name: business_postgres_db
    env_file:
      - ./.env
    ports:
      - "5433:5432" # Using 5433 to avoid conflict with local postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - business-finder-nw

  elasticsearch:
    image: elasticsearch:8.5.3
    container_name: business_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - business-finder-nw

  qdrant:
    image: qdrant/qdrant:latest
    container_name: business_qdrant_db
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./data/qdrant:/qdrant/storage
    networks:
      - business-finder-nw

  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: business_api_server
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      qdrant:
        condition: service_started # qdrant image doesn't have a healthcheck
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - QDRANT_HOST=qdrant
    networks:
      - business-finder-nw

networks:
  business-finder-nw: